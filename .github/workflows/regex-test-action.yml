name: "Regex test action"

on: workflow_dispatch

jobs:
  release:
    name: Publish new release
    env:
      GCP_PROJECT_ID: si26ef9dii9zscrxrecql6kl8eguw2
    runs-on: ubuntu-latest    
    steps:     
      - name: Extract change reason from pull request body 
        uses: actions-ecosystem/action-regex-match@v2.0.2
        id: change-reason-regex
        with:
          text: |
            ```yaml
            titulo_mudanca: acquirer-transactional-api vX.Y.Z

            descricao: |
                1. Descrição 1...
                2. Descrição 2...
                3. Descrição 3...

            link_para_card: |
                1. Link 1...
                2. Link 2...
                3. Link 3...

            plano_de_teste: |
                1. descrição teste 1 + link evidência 1
                2. Não aplicável
                3. descrição teste 3 + link evidência 3

            impacto: INDISPONIBILIDADE DO IC
            probabilidade: BAIXA
            area_impactada: FRONT
            plano_de_rollback: Disparar a última release produtiva.
            categoria: application_software

            aprovador_tecnico: lflopes@stone.com.br
            aprovador_negocio: hillary.souza@stone.com.br
            requisitante_pr: #seu.email@stone.com.br
            ```

            # Atenção! Verifique se no template acima:
            - [ ] O titulo da mudança foi preenchido
              - O título deve estar no formato: `{nome da app} v{versão da release}`, ex. `minha-app v1.2.3`
            - [ ] Os planos de testes foram preenchidos **com links de evidências**
              - Não se esqueça de remover a formatação de link do markdown
            - [ ] O e-mail do autor da release foi preenchido
          regex: '(?<=descricao: \|\n)([\s\S]*)(?=link_para_card)'

      - name: Extract card link from pull request body 
        uses: actions-ecosystem/action-regex-match@v2.0.2
        id: card-link-regex
        with:
          text: |
            ```yaml
            titulo_mudanca: acquirer-transactional-api vX.Y.Z

            descricao: |
                1. Descrição 1...
                2. Descrição 2...
                3. Descrição 3...

            link_para_card: |
                1. Link 1...
                2. Link 2...
                3. Link 3...

            plano_de_teste: |
                1. descrição teste 1 + link evidência 1
                2. Não aplicável
                3. descrição teste 3 + link evidência 3

            impacto: INDISPONIBILIDADE DO IC
            probabilidade: BAIXA
            area_impactada: FRONT
            plano_de_rollback: Disparar a última release produtiva.
            categoria: application_software

            aprovador_tecnico: lflopes@stone.com.br
            aprovador_negocio: hillary.souza@stone.com.br
            requisitante_pr: #seu.email@stone.com.br
            ```

            # Atenção! Verifique se no template acima:
            - [ ] O titulo da mudança foi preenchido
              - O título deve estar no formato: `{nome da app} v{versão da release}`, ex. `minha-app v1.2.3`
            - [ ] Os planos de testes foram preenchidos **com links de evidências**
              - Não se esqueça de remover a formatação de link do markdown
            - [ ] O e-mail do autor da release foi preenchido
          regex: '(?<=link_para_card: \|\n)([\s\S]*)(?=plano_de_teste)'

      - name: Print extracted results
        run: |
          echo ## Motivo da mudança 
          echo ${{ steps.change-reason-regex.outputs.group1 }}

          echo ## Links das demandas que estão sendo resolvidas com a mudança 
          echo ${{ steps.card-link-regex.outputs.group1 }}